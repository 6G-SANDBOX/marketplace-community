---
name: "6G-Sandbox bastion"
version: "autofill"
software_version: "v1.0.0"
publisher: "Telefonica Innovacion Digital"
description: |-
  This appliance installs the latest version of the bastion, the entrypoint of every Virtual Network, with additional services such as:
  - Technitium DNS
  - [route-manager-api](https://github.com/6G-SANDBOX/route-manager-api)
  - Wireguard VPN

  The Bastion has IPv4 routing enabled by default, with all private IPs forbidden by default, unless explictly specified.

  The image is based on an Ubuntu 22.04 cloud image with the OpenNebula [contextualization package](http://docs.opennebula.io/6.6/management_and_operations/references/kvm_contextualization.html).

  After deploying the appliance, you can check the status of the deployment in `/etc/one-appliance/status`, or deployment logs in `/var/log/one-appliance/`.

  The appliance configuration can be customized via parameters:

  * `ONEAPP_BASTION_DNS_PASSWORD` - For the Technitium DNS, admin user password. If not provided, a new one will be generated at instanciate time with `openssl rand -base64 32`.
  * `ONEAPP_BASTION_DNS_FORWARDERS` - For the Technitium DNS, comma separated list of forwarders to be used by the DNS server.
  * `ONEAPP_BASTION_DNS_DOMAIN` - For the Technitium DNS, domain name for creating the new zone.
  * `ONEAPP_BASTION_ROUTEMANAGER_APITOKEN` - For the route-manager-api, Bearer token to authenticate to the API. If not provided, a new one will be generated at instanciate time with `openssl rand -base64 32`.

  **Note**: This appliance does not permit recontextualization. Modifying the context variables will not have any real efects on the running instance.

  **Note**: Wireguard VPN is installed, but without any default configuration. Standalone deployments (outside Trial Networks) won't have any configuration applied by default.
short_description: 6G-Sandbox bastion for KVM
tags:
  - 6G-Sandbox
  - 6G-Library
  - TID
  - bastion
  - ubuntu
format: qcow2
creation_time: "autofill"
os-id: Ubuntu
os-release: 22.04 LTS
os-arch: x86_64
hypervisor: KVM
opennebula_version: >-
  6.6, 6.8, 6.10
opennebula_template:
  context:
    network: 'YES'
    set_hostname: "$NAME"
    ssh_public_key: "$USER[SSH_PUBLIC_KEY]"
    netcfg_type: "interfaces"
    token: 'YES'
    oneapp_bastion_dns_password:       "$ONEAPP_BASTION_DNS_PASSWORD"
    oneapp_bastion_dns_forwarders:     "$ONEAPP_BASTION_DNS_FORWARDERS"
    oneapp_bastion_dns_domain:         "$ONEAPP_BASTION_DNS_DOMAIN"
    oneapp_bastion_routemanager_apitoken: "$ONEAPP_BASTION_ROUTEMANAGER_APITOKEN"
  inputs_order: >-
    ONEAPP_BASTION_DNS_DOMAIN,ONEAPP_BASTION_DNS_PASSWORD,ONEAPP_BASTION_DNS_FORWARDERS,ONEAPP_BASTION_ROUTEMANAGER_APITOKEN
  cpu: '2'
  vcpu: '2'
  graphics:
    listen: 0.0.0.0
    type: vnc
  hypervisor: kvm
  memory: '2048'
  memory_unit_cost: 'MB'
  os:
    arch: x86_64
  logo: images/logos/ubuntu.png
  user_inputs:
    oneapp_bastion_dns_password:       "O|password|ONEAPP_BASTION_DNS_PASSWORD: For the Technitium DNS, admin user password. If not provided, a new one will be generated at instanciate time with `openssl rand -base64 32`."
    oneapp_bastion_dns_forwarders:     "O|text|ONEAPP_BASTION_DNS_FORWARDERS: For the Technitium DNS, comma separated list of forwarders to be used by the DNS server.| |8.8.8.8,1.1.1.1"
    oneapp_bastion_dns_domain:         "M|text|ONEAPP_BASTION_DNS_DOMAIN: For the Technitium DNS, domain name for creating the new zone."
    oneapp_bastion_routemanager_apitoken: "O|password|ONEAPP_BASTION_ROUTEMANAGER_APITOKEN: For the route-manager-api, Bearer token to authenticate to the API. If not provided, a new one will be generated at instanciate time with `openssl rand -base64 32`."
logo: ubuntu.png
images:
  - name: "autofill"
    url: "autofill"
    type: OS
    dev_prefix: vd
    driver: qcow2
    size: "autofill"
    checksum:
      md5: "autofill"
      sha256: "autofill"
